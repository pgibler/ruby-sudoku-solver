#!ruby

# Require code
# ============

# #Application allows us to run the program using the set configuration from the command line.
require_relative '../src/application'

# OptionParser gem for parsing options
require 'optparse'

# Set up options
# ==============

# Set default provider
provider_type = Application::DEFAULT_PROVIDER

# Parse command line options using #OptionParser
opts = OptionParser.new do |opts|
  opts.banner = 'Usage: sudoku-solver'

  opts.on('-p', '--provider [NAME]', String, 'Sets the provider to be used for parsing and generating the solution.') do |provider_name|
    provider_type = Application.get_provider_type(provider_name)
  end
end

opts.on_tail("-h", "--help",
             "Show this message") do
  puts opts
  exit
end

begin
  opts.parse!(ARGV)
rescue OptionParser::InvalidOption => e
  puts e
  puts opts
  exit(1)
end

# Invoke #Application.run!
# ========================

# Run #Application.run! and retrieve the resulting #board_state
provider, board_state, result = Application.run!(provider_type)

# Report on the results
# =====================

if(result.eql? false)
  puts 'Could not finish board. This is as far as we got...'
else
  puts 'Puts we made it! Sudoku achieved!'
end

puts board_state.to_s